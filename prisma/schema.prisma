generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id    String @id @unique
  email String @unique

  World     World[]
  Character Character[]
  City      City[]
  Faction   Faction[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @unique @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

model World {
  id          String @id @default(cuid())
  name        String
  description String @db.VarChar(1000)
  worldYear   String
  magicLevel  String
  techLevel   String

  Characters Character[]
  Cities     City[]
  Factions   Faction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String?
}

model Character {
  id        String @id @default(cuid())
  name      String
  race      String
  class     String
  subclass  String
  alignment String
  age       String
  build     String
  gender    String
  hair      String
  height    String
  fashion   String @db.VarChar(1000)
  quirks    String @db.VarChar(1000)
  goals     String @db.VarChar(1000)
  backstory String @db.VarChar(1000)

  imageURL String @db.VarChar(1000)
  imageKey String

  World   World  @relation(fields: [worldID], references: [id], onDelete: Cascade)
  worldID String

  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model City {
  id           String @id @default(cuid())
  name         String
  population   String
  sprawl       String
  architecture String
  industries   String
  climate      String
  safety       String
  education    String
  modernity    String
  wealth       String
  governance   String @db.VarChar(1000)
  lore         String @db.VarChar(1000)
  quests       String @db.VarChar(1000)
  description  String @db.VarChar(1000)

  imageURL String @db.VarChar(1000)
  imageKey String

  World   World  @relation(fields: [worldID], references: [id], onDelete: Cascade)
  worldID String

  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model Faction {
  id          String @id @default(cuid())
  name        String
  type        String
  population  String
  alignment   String
  presence    String
  devotion    String
  description String @db.VarChar(1000)
  goals       String @db.VarChar(1000)
  lore        String @db.VarChar(1000)
  traits      String @db.VarChar(1000)

  imageURL String @db.VarChar(1000)
  imageKey String

  World   World  @relation(fields: [worldID], references: [id], onDelete: Cascade)
  worldID String

  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}
